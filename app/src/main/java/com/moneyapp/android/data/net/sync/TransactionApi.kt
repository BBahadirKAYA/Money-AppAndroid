package com.moneyapp.android.data.net.sync

import retrofit2.Response
import retrofit2.http.*

data class TransactionNetworkModel(
    val uuid: String,
    val account_id: Long?,
    val category_id: Long?,
    val type: String,
    val amount: Double,
    val paid_sum: Double? = 0.0,
    val currency: String = "TRY",
    val occurred_at: String,
    val note: String?,
    val deleted: Boolean = false
)

// â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
// âœ… YENÄ° MODEL: Silinen UUID'leri karÅŸÄ±layacak API Cevap Modeli
// Laravel'deki 'success':true,'data':[...] formatÄ±na uygun
// â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
data class DeletedUuidsResponse(
    val success: Boolean,
    val data: List<String> // Sunucudan dÃ¶nen silinmiÅŸ UUID listesi
)

/**
 * Laravel API ile transaction senkronizasyonu iÃ§in Retrofit arabirimi.
 * Base URL -> ApiClient iÃ§inde (Ã¶rnek: https://ngrok-url.ngrok-free.dev/)
 */
interface TransactionApi {

    /** ðŸ”¹ TÃ¼m kayÄ±tlarÄ± getir */
    @GET("api/transactions")
    suspend fun getAll(): ResponseWrapper<List<TransactionDto>>

    /** ðŸ”¹ Toplu ekleme veya gÃ¼ncelleme (bulk upsert) */
    @POST("api/transactions/bulk-upsert")
    suspend fun bulkUpsert(
        @Body items: List<TransactionDto>
    ): Response<Unit>

    /** ðŸ”¹ Tek bir kayÄ±t oluÅŸtur veya gÃ¼ncelle */
    @POST("api/transactions")
    suspend fun createOrUpdate(
        @Body item: TransactionDto
    ): ResponseWrapper<TransactionDto>

    /** ðŸ”¹ Tek bir kayÄ±t gÃ¼ncelle (PUT /api/transactions/{uuid}) */
    @PUT("api/transactions/{uuid}")
    suspend fun update(
        @Path("uuid") uuid: String,
        @Body item: TransactionNetworkModel
    ): ResponseWrapper<TransactionNetworkModel>

    /** ðŸ”¹ Belirtilen UUID'li kaydÄ± hard delete yapar. */
    @DELETE("api/transactions/{uuid}")
    suspend fun delete(
        @Path("uuid") uuid: String
    ): Response<Unit>

    // â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    // âœ… YENÄ° METOT: Sunucudan silinen UUID'leri Ã§eker
    // â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
    @GET("api/transactions/deleted")
    suspend fun getDeletedUuids(): Response<DeletedUuidsResponse>
}

/** Laravelâ€™in "success":true,"data":[...] formatÄ± iÃ§in wrapper */
data class ResponseWrapper<T>(
    val success: Boolean = true,
    val data: T
)