name: Build & Release APK + Sheet webhook

on:
  push:
    tags: ['v*']          # v1.2.3 gibi
  workflow_dispatch: {}   # elle de çalıştırılabilir

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - uses: gradle/actions/setup-gradle@v3

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew clean :app:assembleDebug

      - name: Locate & rename APK
        id: apk
        shell: bash
        run: |
          set -euo pipefail
          APK_PATH="$(ls app/build/outputs/apk/debug/*.apk | sort -r | head -n1)"
          [ -n "$APK_PATH" ]
          TAG="${GITHUB_REF_NAME:-manual-${GITHUB_RUN_NUMBER}}"
          APK_NAME="MoneyAppAndroid-${TAG}-debug.apk"
          cp "$APK_PATH" "$APK_NAME"
          echo "apk_name=$APK_NAME" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release & upload asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.apk.outputs.apk_name }}
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Build APK public URL
        id: url
        shell: bash
        run: |
          set -euo pipefail
          TAG="${GITHUB_REF_NAME:-manual-${GITHUB_RUN_NUMBER}}"
          NAME="${{ steps.apk.outputs.apk_name }}"
          echo "apk_url=https://github.com/${{ github.repository }}/releases/download/${TAG}/${NAME}" >> "$GITHUB_OUTPUT"

      - name: Read version from Gradle
        id: ver
        shell: bash
        run: |
          set -euo pipefail
          OUT="$(./gradlew -q :app:printVersionInfo)"
          echo "$OUT"
          VC="$(echo "$OUT" | sed -n 's/^VERSION_CODE=\(.*\)$/\1/p')"
          VN="$(echo "$OUT" | sed -n 's/^VERSION_NAME=\(.*\)$/\1/p')"
          [ -n "$VC" ] && [ -n "$VN" ]
          echo "version_code=$VC" >> "$GITHUB_OUTPUT"
          echo "version_name=$VN" >> "$GITHUB_OUTPUT"

      - name: POST to Google Sheets
        env:
          WEBAPP_URL:   ${{ secrets.SHEET_WEBHOOK_URL }}
          APK_URL:      ${{ steps.url.outputs.apk_url }}
          VERSION_CODE: ${{ steps.ver.outputs.version_code }}
          VERSION_NAME: ${{ steps.ver.outputs.version_name }}
        shell: bash
        run: |
          set -euo pipefail
          if [ -z "${WEBAPP_URL:-}" ]; then
            echo "SHEET_WEBHOOK_URL secret'ını ayarlayın." >&2
            exit 1
          fi
          JSON=$(jq -n \
            --arg vc  "$VERSION_CODE" \
            --arg vn  "$VERSION_NAME" \
            --arg url "$APK_URL" \
            '{version_code: ($vc|tonumber), version_name: $vn, asset_url: $url, versionCode: ($vc|tonumber), versionName: $vn, apkUrl: $url}')
          echo "$JSON" | jq .
          curl --fail --retry 3 --retry-delay 2 \
               -H "Content-Type: application/json" \
               -d "$JSON" \
               "$WEBAPP_URL"
